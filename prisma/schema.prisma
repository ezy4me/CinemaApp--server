// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User models

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  firstName   String
  lastName    String
  gender      String
  birthday    DateTime
  phone       String        @unique
  role        Role          @relation(fields: [roleId], references: [id])
  roleId      Int
  loyaltyCard LoyaltyCard?
  userTickets UserTickets[]
  token       Token[]
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Token {
  token     String   @unique
  exp       DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  userAgent String
}

// LoyaltyCard models

model LoyaltyCard {
  id      Int    @id @default(autoincrement())
  number  String @unique
  balance Int
  user    User   @relation(fields: [userId], references: [id])
  userId  Int    @unique
}

model LoyaltyProgram {
  id              Int     @id @default(autoincrement())
  name            String  @unique
  description     String
  requiredBalance Int
  discount        Decimal
}

// Movie models

model Movie {
  id               Int            @id @default(autoincrement())
  title            String         @unique
  description      String
  duration         Int
  previewImage     String
  previewVideo     String
  movieGenre       MovieGenre     @relation(fields: [movieGenreId], references: [id])
  movieGenreId     Int
  movieCountry     MovieCountry   @relation(fields: [movieCountryId], references: [id])
  movieCountryId   Int
  movieAgeRating   MovieAgeRating @relation(fields: [movieAgeRatingId], references: [id])
  movieAgeRatingId Int
  movieActors      MovieActors[]
  session          Session[]
}

model MovieGenre {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  movie Movie[]
}

model MovieCountry {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  image String
  movie Movie[]
}

model MovieAgeRating {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  age   Int
  movie Movie[]
}

model Actor {
  id          Int           @id @default(autoincrement())
  firstName   String
  lastName    String
  age         Int
  image       String
  movieActors MovieActors[]
}

model MovieActors {
  id        Int    @id @default(autoincrement())
  character String
  movie     Movie  @relation(fields: [movieId], references: [id])
  movieId   Int
  actor     Actor  @relation(fields: [actorId], references: [id])
  actorId   Int
}

// Cinema Hall models

model Cinema {
  id      Int    @id @default(autoincrement())
  name    String
  address String
  Phone   String
  email   String
  hall    Hall[]
}

model Hall {
  id           Int           @id @default(autoincrement())
  number       String
  capacity     Int
  hallStatus   HallStatus    @relation(fields: [hallStatusId], references: [id])
  hallStatusId Int
  cinema       Cinema        @relation(fields: [cinemaId], references: [id])
  cinemaId     Int
  hallPlace    HallPlace[]
  ticketPrice  TicketPrice[]
  session      Session[]
}

model HallStatus {
  id         Int     @id @default(autoincrement())
  name       String  @unique
  multiplier Decimal
  hall       Hall[]
}

model HallPlace {
  id         Int      @id @default(autoincrement())
  rowNumber  Int
  seatNumber Int
  hall       Hall     @relation(fields: [hallId], references: [id])
  hallId     Int
  ticket     Ticket[]
}

// Ticket models

model Ticket {
  id             Int           @id @default(autoincrement())
  number         Int           @unique
  totalPrice     Int
  qrCode         String
  ticketStatus   TicketStatus  @relation(fields: [ticketStatusId], references: [id])
  ticketStatusId Int
  hallPlace      HallPlace     @relation(fields: [hallPlaceId], references: [id])
  hallPlaceId    Int
  ticketPrice    TicketPrice   @relation(fields: [ticketPriceId], references: [id])
  ticketPriceId  Int
  session        Session       @relation(fields: [sessionId], references: [id])
  sessionId      Int
  userTickets    UserTickets[]
}

model TicketStatus {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  ticket Ticket[]
}

model TicketPrice {
  id        Int      @id @default(autoincrement())
  basePrice Int
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId Int
  hall      Hall     @relation(fields: [hallId], references: [id])
  hallId    Int
  ticket    Ticket[]
}

model UserTickets {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  ticket   Ticket @relation(fields: [ticketId], references: [id])
  ticketId Int
}

// Session models

model Session {
  id            Int           @id @default(autoincrement())
  startTime     DateTime
  date          DateTime
  movie         Movie         @relation(fields: [movieId], references: [id])
  movieId       Int
  sessionType   SessionType   @relation(fields: [sessionTypeId], references: [id])
  sessionTypeId Int
  hall          Hall          @relation(fields: [hallId], references: [id])
  hallId        Int
  ticketPrice   TicketPrice[]
  ticket        Ticket[]
}

model SessionType {
  id             Int       @id @default(autoincrement())
  name           String    @unique
  startPointTime DateTime
  endPointTime   DateTime
  miltiplier     Decimal
  session        Session[]
}
